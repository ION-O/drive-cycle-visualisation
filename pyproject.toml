[build-system]
requires = ["setuptools>=64"]
build-backend = "setuptools.build_meta"

[project]
name = "field-data-drive-cycle-creation"
version = "2025"
authors = [
  {name = "Katie Lukow"},
]
#maintainers = [
#  {name = "The PyBOP Team"},
#]
description = "Real-World Representative Load Profiles from Field Data"
readme = {file = "README.md", content-type = "text/markdown"}
license = { file = "LICENSE" }
#classifiers = [
#  "Development Status :: 3 - Alpha",
#  "License :: OSI Approved :: BSD License",
#  "Programming Language :: Python :: 3.9",
#  "Programming Language :: Python :: 3.10",
#  "Programming Language :: Python :: 3.11",
#  "Programming Language :: Python :: 3.12",
#  "Intended Audience :: Science/Research",
#  "Topic :: Scientific/Engineering",
#]
requires-python = ">=3.9, <3.13"
dependencies = [
    "streamlit>=1.36",
    "plotly>=5.15",
    "pandas>=2",
    "kneed>=0.8.5",
    "scikit-learn>=1.3.0",
    "pybamm>=24.9",
    "numpy>=1.25",
    "scipy>=1.13",
    "matplotlib>=3.7"
#  "calendar",
#  "datetime"
#    "os",

]

#[project.urls]
#Homepage = "https://github.com/pybop-team/PyBOP"
#Documentation = "https://pybop-docs.readthedocs.io"
#Repository = "https://github.com/pybop-team/PyBOP"
#Releases = "https://github.com/pybop-team/PyBOP/releases"
#Changelog = "https://github.com/pybop-team/PyBOP/blob/develop/CHANGELOG.md"

[tool.ruff]
extend-include = ["*.ipynb"]
extend-exclude = ["__init__.py"]
fix = true

[tool.ruff.lint]
select = [
    "A",    # flake8-builtins: Check for Python builtins being used as variables or parameters
    "B",    # flake8-bugbear: Find likely bugs and design problems
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes: Detect various errors by parsing the source file
    "I",    # isort: Check and enforce import ordering
    "ISC",  # flake8-implicit-str-concat: Check for implicit string concatenation
    "TID",  # flake8-tidy-imports: Validate import hygiene
    "UP",   # pyupgrade: Automatically upgrade syntax for newer versions of Python
    "SLF001",  # flake8-string-format: Check for private object name access
]

ignore = ["E501","E741"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["SLF001"]
"**.ipynb" = ["E402", "E703"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"